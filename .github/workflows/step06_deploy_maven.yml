name: Java CI/CD with Maven
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Create application.properties
      run: |
        echo "${{secrets.APPLICATION_PROPERTIES}}" > ./src/main/resources/application.properties
        
    - name: Build with Maven
      run: mvn --batch-mode --update-snapshots verify
      
    - name: Prepare deployment
      run: |
        mkdir -p deploy
        cp ./target/*.jar ./deploy/app.jar
      
    - uses: actions/upload-artifact@v2
      with:
        name: app
        path: ./deploy/app.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: app
      - name: Setup SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.REMOTE_HOST }} >> ~/.ssh/known_hosts
      - name: Deploy to server
        env:
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
        run: |
          scp -o StrictHostKeyChecking=no app.jar $REMOTE_USER@$REMOTE_HOST:/home/$REMOTE_USER/
          ssh -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST << EOF
            sudo systemctl stop myapp || true
            sudo mv /home/$REMOTE_USER/app.jar /opt/myapp/app.jar
            sudo systemctl start myapp
          EOF
