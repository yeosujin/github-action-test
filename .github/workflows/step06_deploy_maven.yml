name: Java CI/CD with Maven
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Make File of application.properties
      run: |
        mkdir ./src/main/resources
        touch ./src/main/resources/application.properties
        echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./src/main/resources/application.properties
    # - name: Upload application.properties
    #   uses: actions/upload-artifact@v2
    #   with: 
    #     name: application.properties
    #     path: ./src/main/resources/application.properties
    
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Make Directory
      run: mkdir -p deploy
    - name: Copy Artifact Jar
      run: cp ./target/*.jar ./deploy/app.jar
    - name: Upload app.jar
      uses: actions/upload-artifact@v2
      with:
        name: app
        path: ./deploy/app.jar

    # # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive 
    # - name: Update dependency graph 
    # uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifacts@v2
        with:
          name: app

      - name: Creat SSH_PRIVATE_KEY
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/private-key.pem
          chmod 600 ~/private-key.pem

      - name: Create SSH Directory
        run: |
          mkdir -p ~/.ssh
      - name: Add Host
        run: |
          ssh-keyscan ${{ secrets.REMOE_HOST }} >> ~/.ssh/known_hosts
        
      - name: Transfer Artifact Jar via SCP
        run: |
          scp -i ~/private-key.pem app.jar ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:/home/${{ secrets.REMOTE_USER }}

      - name: Execute REMOTE_HOST Commands
        run: |
          ssh -i ~/private-key.pem ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "sudo nohup java -jar /home/${{ secrets.REMOTE_USER }}/app.jar"
